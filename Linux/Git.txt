   _____ _____ _______ 
  / ____|_   _|__   __|
 | |  __  | |    | |   
 | | |_ | | |    | |   
 | |__| |_| |_   | |   
  \_____|_____|  |_|   
                       
--------------------------
Consignes

Comment faire pour : 
A) Suivre et héberger un projet déjà existant.

B) Travailler sur un projet déjà hebergé.

C) Faire un nouveau projet sur GitHub, puis en local.
--------------------------


A) Suivre et héberger un projet déjà existant.

Se placer dans le dossier qu'on veut initialiser ( cd "nomdossier")

Liste des commandes : 
1 - git init
2 - git add nomfichier.extension
3 - git status
4 - git commit -m "commentaires"
5 - git config user.name "Nom Prenom" 
6 - git config user.email adresse@mail.com
7 - git commit -m "commentaires"
8 - git remote add origin http://urldurepository
9 - git push origin master

Explications des lignes de commandes ci-dessus :
1 - Permet d'initialiser un dossier sur lequel git sera apte à suivre des fichiers.
2 - Ajoute un instantané du fichier, en préparation pour le suivi de version.
3 - Liste tous les nouveaux fichiers et les fichiers modifiés à commiter.
5 & 6 - Spécifier l'adresse mail et le nom avec les commandes données ci dessus si necessaire.
7 - Valide les modifications apportées à un fichier (indispensable pour l'uploader), - m permet d'ajouter un commentaire
8 - Définit l'URL du dossier de destination sur git, avec lequel sera synchronisé le dossier local.
9 - Pousse/envoie/upload le fichier, vers l'URL de destination définie au préalable.



B) Travailler sur un projet déjà hebergé.

Liste des commandes : 
1 - git clone http://urldurepository
2 - git add nomdufichier
3 - git config user.name Nom Prenom 
4 - git config.email adresse@mail.com
5 - git commit -m "message"
6 - git remote add origin http://urldurepository
7 - git push origin master

Explications des lignes de commandes ci-dessus :

1 - Crée un clone du repertoire indiqué, localement.
2 - Ajoute un instantané du fichier, en préparation pour le suivi de version.
3 & 4 - Spécifier l'adresse mail et le nom avec les commandes données ci dessus si necessaire.
5 - Valide les modifications apportées à un fichier (indispensable pour l'uploader), - m permet d'ajouter un commentaire.
6 - Définit l'URL du dossier de destination sur git, avec lequel sera synchronisé le dossier local.
7 - Pousse/envoie/upload le fichier, vers l'URL de destination définie au préalable.



C) Faire un nouveau projet sur GitHub, puis en local.

Créer un dépot (new repository) sur le site GitHub.
Retenir l'url https (copy) du dépot.

Liste des commandes :
1 - mkdir nomDuDossier
2 - cd nomDuDossier
3 - git init
4 - git remote add origin UrlDuDépot
5 - git add nomDuFichier
6 - git commit -m "Commentaires"
7 - git push -u origin master

Explications des lignes de commandes ci-dessus : 
1 - Création d'un dossier pour stocker les ressources.
2 - Changer de répertoire pour s'y placer à l'intérieur.
3 - Crée un dépot local à partir du nom spécifié.
4 - Ajout du dossier au dépot GitHub.
5 - Ajoute un instantané du fichier, en préparation pour le suivi de version.
6 - Enregistre des instantanés de fichiers de façon permanente dans l'historique des versions.
7 - Envoie tous les commits de la branche local vers GitHub.


Etapes fondamentales :
- Modification
- Indexation
- Validation
- Poussage
